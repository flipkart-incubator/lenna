#! /bin/sh
# /etc/init.d/rukmini

### BEGIN INIT INFO
# Provides:          rukmini
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the rukmini service
# Description:       This file is used to start rukmini image delivery service
#                    and should be placed in /etc/init.d
### END INIT INFO

# Author:  Phaneesh Nagaraja <phaneesh.nagaraja[AT]flipkart.com>

# Set umask for all files created by this process
umask 0777

PACKAGE=rukmini
PACKAGE_USER=rukmini
PACKAGE_GROUP=rukmini
PF_UID=9075
PF_GID=9001

RUKMINI_BASE_DIR=/var/lib/${PACKAGE}
RUKMINI_EXE=${RUKMINI_BASE_DIR}/src/${PACKAGE}/${PACKAGE}
RUKMINI_PID_PATH=/var/run/${PACKAGE}
RUKMINI_PID_FILE=${RUKMINI_PID_PATH}/${PACKAGE}.pid

if [ ! -e ${RUKMINI_PID_PATH} ]; then
    mkdir -m 755 -p ${RUKMINI_PID_PATH}
fi

# Determine hard and soft limits for the user
USR_H_LIMIT=`ulimit -Hn`
USR_S_LIMIT=`ulimit -Sn`

#Free memory
FREE_MEM=`free -g`

#Uptime
M_UPTIME=`uptime`
echo "************************************************************************"
echo "Hard Limit: ${USR_H_LIMIT}"
echo "Soft Limit: ${USR_S_LIMIT}"
echo "Free Memory: ${FREE_MEM}"
echo "Uptime: ${M_UPTIME}"
echo "************************************************************************"


ACTION="$1"

start()
{
    touch /var/run/${PACKAGE}/${PACKAGE}.pid
    chmod -R 777 /var/run/${PACKAGE}/${PACKAGE}.pid
    start-stop-daemon --start --background --oknodo \
                --umask 000 --user ${PACKAGE_USER} --chuid ${PACKAGE_USER} \
                --make-pidfile --pidfile ${RUKMINI_PID_FILE} \
                --exec ${RUKMINI_EXE} 2>&1 > /dev/null
    return $?
}

stop()
{
    oor
    cleartemp
    touch /var/run/${PACKAGE}/${PACKAGE}.pid
    chmod -R 777 /var/run/${PACKAGE}/${PACKAGE}.pid
    start-stop-daemon --stop --signal 9 \
                        --quiet --pidfile ${RUKMINI_PID_FILE} \
                        --retry 300 \
                        --user ${PACKAGE_USER} \
                        --exec ${RUKMINI_EXE} 2>&1 > /dev/null
    return $?
}

terminate()
{
    if [ -f "${RUKMINI_PID_FILE}" ] ; then
        sudo -u ${PACKAGE_USER} kill -9 $(cat ${RUKMINI_PID_FILE}) || true
        sudo -u ${PACKAGE_USER} rm -f ${RUKMINI_PID_FILE}
    else
        CURRENT_RUNNING_PID=`ps -ef | grep rukmini | tail -n 1 | cut -d' ' -f 6`
        if [ -z "${CURRENT_RUNNING_PID}" ] ; then
            sudo -u ${PACKAGE_USER} kill -9 ${CURRENT_RUNNING_PID}
            sudo -u ${PACKAGE_USER} rm -f ${RUKMINI_PID_FILE}
        fi
    fi
    echo
    echo "Service has been stopped using black magic and voodoo!"
    echo
}


usage()
{
    echo "Usage: ${0} {start|stop|restart|status|force-restart|terminate} "
    exit 0
}

fix()
{
    IS_PROCESS_RUNNING=`ps -ef | grep rukmini | wc -l`
    if [ "${IS_PROCESS_RUNNING}" = 2 ]
    then
        NEW_PID_PROCESS=`ps -ef | grep rukmini | awk -F' ' '{print $2}' | tail -n 1`
        sudo -u ${PACKAGE_USER} echo ${NEW_PID_PROCESS} > ${RUKMINI_PID_FILE}
        sudo -u ${PACKAGE_USER} chmod a+rwx ${RUKMINI_PID_FILE}
        echo "PID file has been updated!"
    else
      sudo -u ${PACKAGE_USER} rm -f ${RUKMINI_PID_FILE}
    fi
}

status()
{
    cd "${RUKMINI_BASE_DIR}"
    if [ -f "${RUKMINI_PID_FILE}" ] ; then
        echo "${PACKAGE} is running with pid : " $(cat ${RUKMINI_PID_FILE})
    else
        echo "Service is not running according to pid file! End is near.. repent now!"
        fix
    fi
}

oor() {
    echo "Bringing API out of rotation..."
    API_HOST=`hostname`
    ENDPOINT="http://"${API_HOST}":8081/oor"
    curl -XPOST ${ENDPOINT} || true
    sleep 10
    echo "Done"
}

inr() {
    echo "Bringing API into rotation..."
    API_HOST=`hostname`
    ENDPOINT="http://"${API_HOST}":8081/inr"
    curl -XPOST ${ENDPOINT} || true
    echo "Done"
}

cleartemp() {
    echo "Clearing temp..."
    cd /tmp
    find . -mmin +1 -type f -print -delete
    echo "Cleared temp directory!"
}

case "${ACTION}" in
    start)
        echo "Starting image delivery service...."
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    force-restart)
        terminate
        sleep 5
        start
        ;;
    terminate)
        terminate
        ;;
    status)
       status
       ;;
    fix)
       fix
       ;;
    oor)
        oor
        ;;
    inr)
        inr
        ;;
    cleartemp)
        cleartemp
        ;;
    *)
       usage
       ;;
esac
